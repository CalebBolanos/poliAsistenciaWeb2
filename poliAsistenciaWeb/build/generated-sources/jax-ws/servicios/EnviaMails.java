
package servicios;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "enviaMails", targetNamespace = "http://servicios/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EnviaMails {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "recuperaContra", targetNamespace = "http://servicios/", className = "servicios.RecuperaContra")
    @ResponseWrapper(localName = "recuperaContraResponse", targetNamespace = "http://servicios/", className = "servicios.RecuperaContraResponse")
    @Action(input = "http://servicios/enviaMails/recuperaContraRequest", output = "http://servicios/enviaMails/recuperaContraResponse")
    public boolean recuperaContra(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param para
     * @param msj
     * @param titulo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mandaMAils", targetNamespace = "http://servicios/", className = "servicios.MandaMAils")
    @ResponseWrapper(localName = "mandaMAilsResponse", targetNamespace = "http://servicios/", className = "servicios.MandaMAilsResponse")
    @Action(input = "http://servicios/enviaMails/mandaMAilsRequest", output = "http://servicios/enviaMails/mandaMAilsResponse")
    public boolean mandaMAils(
        @WebParam(name = "Para", targetNamespace = "")
        int para,
        @WebParam(name = "Titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "Msj", targetNamespace = "")
        String msj);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cambia", targetNamespace = "http://servicios/", className = "servicios.Cambia")
    @ResponseWrapper(localName = "cambiaResponse", targetNamespace = "http://servicios/", className = "servicios.CambiaResponse")
    @Action(input = "http://servicios/enviaMails/cambiaRequest", output = "http://servicios/enviaMails/cambiaResponse")
    public String cambia();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "confirma", targetNamespace = "http://servicios/", className = "servicios.Confirma")
    @ResponseWrapper(localName = "confirmaResponse", targetNamespace = "http://servicios/", className = "servicios.ConfirmaResponse")
    @Action(input = "http://servicios/enviaMails/confirmaRequest", output = "http://servicios/enviaMails/confirmaResponse")
    public String confirma(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mandaMAil", targetNamespace = "http://servicios/", className = "servicios.MandaMAil")
    @ResponseWrapper(localName = "mandaMAilResponse", targetNamespace = "http://servicios/", className = "servicios.MandaMAilResponse")
    @Action(input = "http://servicios/enviaMails/mandaMAilRequest", output = "http://servicios/enviaMails/mandaMAilResponse")
    public boolean mandaMAil(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validaCuenta", targetNamespace = "http://servicios/", className = "servicios.ValidaCuenta")
    @ResponseWrapper(localName = "validaCuentaResponse", targetNamespace = "http://servicios/", className = "servicios.ValidaCuentaResponse")
    @Action(input = "http://servicios/enviaMails/validaCuentaRequest", output = "http://servicios/enviaMails/validaCuentaResponse")
    public boolean validaCuenta(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "baseMail", targetNamespace = "http://servicios/", className = "servicios.BaseMail")
    @ResponseWrapper(localName = "baseMailResponse", targetNamespace = "http://servicios/", className = "servicios.BaseMailResponse")
    @Action(input = "http://servicios/enviaMails/baseMailRequest", output = "http://servicios/enviaMails/baseMailResponse")
    public String baseMail(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
