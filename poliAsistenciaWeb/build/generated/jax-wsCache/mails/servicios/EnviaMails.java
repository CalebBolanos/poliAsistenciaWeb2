
package servicios;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "enviaMails", targetNamespace = "http://servicios/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EnviaMails {


    /**
     * 
     * @param para
     * @param msj
     * @param titulo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mandaMAils", targetNamespace = "http://servicios/", className = "servicios.MandaMAils")
    @ResponseWrapper(localName = "mandaMAilsResponse", targetNamespace = "http://servicios/", className = "servicios.MandaMAilsResponse")
    @Action(input = "http://servicios/enviaMails/mandaMAilsRequest", output = "http://servicios/enviaMails/mandaMAilsResponse")
    public boolean mandaMAils(
        @WebParam(name = "Para", targetNamespace = "")
        int para,
        @WebParam(name = "Titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "Msj", targetNamespace = "")
        String msj);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mandaMAil", targetNamespace = "http://servicios/", className = "servicios.MandaMAil")
    @ResponseWrapper(localName = "mandaMAilResponse", targetNamespace = "http://servicios/", className = "servicios.MandaMAilResponse")
    @Action(input = "http://servicios/enviaMails/mandaMAilRequest", output = "http://servicios/enviaMails/mandaMAilResponse")
    public boolean mandaMAil(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "baseMail", targetNamespace = "http://servicios/", className = "servicios.BaseMail")
    @ResponseWrapper(localName = "baseMailResponse", targetNamespace = "http://servicios/", className = "servicios.BaseMailResponse")
    @Action(input = "http://servicios/enviaMails/baseMailRequest", output = "http://servicios/enviaMails/baseMailResponse")
    public String baseMail(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param codigo
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validarCodigo", targetNamespace = "http://servicios/", className = "servicios.ValidarCodigo")
    @ResponseWrapper(localName = "validarCodigoResponse", targetNamespace = "http://servicios/", className = "servicios.ValidarCodigoResponse")
    @Action(input = "http://servicios/enviaMails/validarCodigoRequest", output = "http://servicios/enviaMails/validarCodigoResponse")
    public String validarCodigo(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "recuperarContra", targetNamespace = "http://servicios/", className = "servicios.RecuperarContra")
    @ResponseWrapper(localName = "recuperarContraResponse", targetNamespace = "http://servicios/", className = "servicios.RecuperarContraResponse")
    @Action(input = "http://servicios/enviaMails/recuperarContraRequest", output = "http://servicios/enviaMails/recuperarContraResponse")
    public void recuperarContra(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "descifra", targetNamespace = "http://servicios/", className = "servicios.Descifra")
    @ResponseWrapper(localName = "descifraResponse", targetNamespace = "http://servicios/", className = "servicios.DescifraResponse")
    @Action(input = "http://servicios/enviaMails/descifraRequest", output = "http://servicios/enviaMails/descifraResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://servicios/enviaMails/descifra/Fault/Exception")
    })
    public String descifra(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cifra", targetNamespace = "http://servicios/", className = "servicios.Cifra")
    @ResponseWrapper(localName = "cifraResponse", targetNamespace = "http://servicios/", className = "servicios.CifraResponse")
    @Action(input = "http://servicios/enviaMails/cifraRequest", output = "http://servicios/enviaMails/cifraResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://servicios/enviaMails/cifra/Fault/Exception")
    })
    public String cifra(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "validarCuenta", targetNamespace = "http://servicios/", className = "servicios.ValidarCuenta")
    @ResponseWrapper(localName = "validarCuentaResponse", targetNamespace = "http://servicios/", className = "servicios.ValidarCuentaResponse")
    @Action(input = "http://servicios/enviaMails/validarCuentaRequest", output = "http://servicios/enviaMails/validarCuentaResponse")
    public void validarCuenta(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
